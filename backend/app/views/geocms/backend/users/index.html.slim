= content_for :sidebar do
  == render "/geocms/parts/sidebar", controller: "users"

.page-header
  h1 = t("modules.users.title.index")

= link_to t("modules.users.new"), [:new, :backend, :user], class: "btn btn-primary"

table.table.table-striped.table-users
  thead
    tr
      th 
        = t "activerecord.attributes.default.login"
      th 
        = t "activerecord.attributes.default.email"
      th 
        = t "activerecord.attributes.default.joined_on"
      th width="40px"
      th width="40px"
  tbody
    - @users.each do |u|
      == render "user", user: u
br
- if can? :create, Geocms::User
  = simple_form_for [:backend, @membership] do |f|
    .input-group
      = text_field_tag :user_email, nil, :placeholder => "#{t('modules.users.choose_collaborator')}", :id => "typeahead_user", :class => "input-add-colaborator, form-control typeahead", :data => {:provide => 'typeahead' }, html: { autocomplete: "off" }
      span.input-group-btn
        button.btn.btn-default
          = t("actions.default.add")

= content_for :javascripts do
  = javascript_include_tag "typeahead/typeahead"
  javascript:
    var data = #{@others_users}
    var $input = $(".typeahead");
    $input.typeahead({
      source: data,
      autoSelect: true,
      displayText: function(item) {
        return item.email
      },
      afterSelect: function(item) {
        this.$element[0].value = item.email
      }
    });
